import java.util.*;
class Solution {
    public int[] solution(String S, int[] P, int[] Q) {
        int len = P.length;
        int [] res = new int[P.length];
        // the value can only be 1,2,3 or 4
        // the idea is to keep track of how many 1,2,3 and 4s occurred before
        // any character of the input DNA sequence
        int [][] histogram = new int[4][S.length()+2];
        HashMap<Integer,Integer> counters =new HashMap<Integer,Integer>();
        counters.put(1,0);counters.put(2,0);
        counters.put(3,0);counters.put(4,0);
        for (int p=0;p<S.length();p++){
            int val = getFactor(S.substring(p,p+1));
            int count = counters.get(val);
            count++;
            counters.put(val,count);
            Set<Integer> keys = counters.keySet();
            Iterator<Integer> kit = keys.iterator();
            while(kit.hasNext()){
                int key = kit.next();
                histogram[key-1][p+1]=counters.get(key);
            }
        }
        for (int p=0;p<len;p++){
          //now we have to check if at least an element of the lowest
          //gene occurred otherwise continue with the next one
                if ((histogram[0][Q[p]+1]- histogram[0][P[p]])>0) {
             res[p]= 1;
          }else if ((histogram[1][Q[p]+1]- histogram[1][P[p]])>0){
              res[p]= 2;
          }else if ((histogram[2][Q[p]+1]- histogram[2][P[p]])>0){
              res[p]= 3;
          }else if ((histogram[3][Q[p]+1]- histogram[3][P[p]])>0){
              res[p]= 4;
          }
         
        }
         return res;
    }
    

    public int getFactor(String c){
        if (c.equals("A"))return 1;
        if (c.equals("C"))return 2;
        if (c.equals("G"))return 3;
        if (c.equals("T"))return 4;
        return -1;
    }
}

